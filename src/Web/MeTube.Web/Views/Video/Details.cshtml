@model VideoDto

@{
    ViewData["Title"] = "Video";
    var reactionTypes = (List<ReactionTypeDto>) ViewData["ReactionTypes"];
}

<header>
    <div class="search-bar-container">
        <input class="search-bar" type="text" />
        <img class="search-bar-icon" src="~/images/search-icon.png" />
    </div>
</header>
<main>
    <span id="video-id-@Model.Id" hidden></span>
    <div class="video-visualizer">
        <video controls src="@Model.VideoFile.CloudURL"></video>
    </div>
    <div class="video-title-and-reactions d-flex justify-content-between mt-3">
        <h3 class="video-title fw-bold w-50">@Model.Title</h3>
        <div class="video-reactions d-flex justify-content-end w-50">
            @foreach (var reactionType in reactionTypes.OrderByDescending(rt => Model.Reactions.Count(reaction => reaction.Type.Type == rt.Type)))
            {
                <div class="video-reaction-type-card p-3 d-flex justify-content-around" id="reaction-type-@reactionType.Id">
                    <img width="25px" height="25px" src="@reactionType.ReactionIcon.CloudURL" />
                    <span class="fw-bold">@Model.Reactions.Count(reaction => reaction.Type.Type == reactionType.Type)</span>
                </div>
            }
        </div>
    </div>
    <div class="video-metadata mt-3">
        <div class="video-metadata-channel">
            <img class="video-matadata-channel-profile-picture" src="@Model.CreatedBy.ProfilePicture.CloudURL" />
            <div class="video-matadata-channel-data">
                <h5 class="fw-bold">@Model.CreatedBy.Name</h5>
                <h6 class="text-faded fw-normal">@Model.CreatedBy.Subscribers.Count subscribers</h6>
            </div>
        </div>
        <div class="video-metadata-description mt-3">
            <h6 class="video-metadata-views-and-date fw-bold">@Model.Views views, @Model.CreatedOn.ToString("dd/MM/yyyy")</h6>
            <p class="video-metadata-description-content text-faded">
                @Model.Description
            </p>
        </div>
    </div>
</main>

<script>
    [...document.querySelectorAll('.video-reaction-type-card')].forEach(videoReactionTypeCard => videoReactionTypeCard.addEventListener('click', function (e) {
        const reactionTypeId = this.id.replace('reaction-type-', '');
        const videoId = document.querySelector('span[id^="video-id-"]').id.replace('video-id-', '');

        fetch(`/Video/React?videoId=${videoId}&reactionTypeId=${reactionTypeId}`, {
            method: 'POST'
        })
            .then(res => res.json())
            .then(json => {
                const reactionTypes = json.reactions.map(reaction => reaction.type);
                const reactionTypeCountById = {};
                for (var reactionType of reactionTypes) {
                    if (!reactionTypeCountById[reactionType.id]) {
                        reactionTypeCountById[reactionType.id] = 0;
                    }

                    reactionTypeCountById[reactionType.id]++;
                }
                [...document.querySelectorAll('div[id^="reaction-type-"]')].forEach(function (e) {
                    const reactionTypeId = e.id.replace('reaction-type-', '');
                    const span = e.querySelector('span');
                    
                    if (reactionTypeCountById[reactionTypeId]) {
                        span.textContent = reactionTypeCountById[reactionTypeId];
                        return;
                    }

                    span.textContent = 0;
                });
            });
    }))
</script>